<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.xawl.Dao.DclassDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
        resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
    <!-- 根据id查询得到一个user对象 -->

    <select id="getDclass" parameterType="com.xawl.Pojo.Dclass" resultType="com.xawl.Pojo.Dclass">
        select *
        from db_class
        <where>
            <if test="id!=null and id>0 ">id=#{id}</if>
            <if test="cname!=null and cname!=''">and cname=#{cname}</if>
            <if test="series!=null and series!='' ">and series=#{series}</if>
            <if test="sdept!=null and sdept!=''">and sdept=#{sdept}</if>
        </where>
        ORDER BY series,sdept
    </select>
    <insert id="insertDclass" parameterType="com.xawl.Pojo.Dclass">
        insert into db_class (cname,pnum,series,sdept,startedDate)
        values(#{cname},#{pnum},#{series},#{sdept},#{startedDate})
    </insert>
    <update id="updateDclassById" parameterType="com.xawl.Pojo.Dclass">
        update db_class
         <set>
             <if test="cname!=null and cname!=''">cname=#{cname},</if>
             <if test="pnum!=null and pnum>0">pnum=#{pnum},</if>
             <if test="series!=null and series!='' ">series=#{series},</if>
             <if test="sdept!=null and sdept!=''">sdept=#{sdept},</if>
         </set>
         where id=#{id}
    </update>


    <delete id="deleteDclassById" parameterType="Integer">
        DELETE from db_class WHERE id = #{id}
    </delete>

</mapper>