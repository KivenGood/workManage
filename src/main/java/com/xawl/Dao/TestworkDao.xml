<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.xawl.Dao.TestworkDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
        resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
    <!-- 根据id查询得到一个user对象 -->

    <select id="getTestwork" parameterType="com.xawl.Pojo.Testwork" resultType="com.xawl.Pojo.Testwork">
        select *
        from db_testwork
        <where>
            <if test="id!=null and id>0 ">id=#{id}</if>
            <if test="uid!=null and uid>0">and uid=#{uid}</if>
            <if test="type!=null and type>0">and type=#{type}</if>
            <if test="pass!=null and pass!='' ">and pass=#{pass}</if>
        </where>
    </select>

    <insert id="insertTestwork" parameterType="com.xawl.Pojo.Testwork">
        insert into db_testwork (uid,type,num,lnames,classhours,startedDate,pass)
        values(#{uid},#{type},#{num},#{lnames},#{classhours},#{startedDate},#{pass})
    </insert>

    <update id="updateTestworkById" parameterType="com.xawl.Pojo.Testwork">
        update db_testwork
        <set>
            <if test="num!=null and num>0">num=#{num},</if>
            <if test="lnames!=null and lnames!='' ">lnames=#{lnames},</if>
            <if test="pass!=null and pass>0">pass=#{pass},</if>
            <if test="classhours!=null">classhours=#{classhours},</if>
        </set>
         where id=#{id}
    </update>
    <delete id="delectTestworkById">
        DELETE from db_testwork WHERE id = #{id}
    </delete>

</mapper>