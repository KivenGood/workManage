<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 
	例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.xawl.Dao.UserDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
        resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
    <!-- 根据id查询得到一个user对象 -->

    <select id="getUser" parameterType="com.xawl.Pojo.User" resultType="com.xawl.Pojo.User">
        select *
        from db_user
        <where>
            <if test="id!=null and id>0 ">id=#{id}</if>
            <if test="techno!=null and techno!=''">and techno=#{techno}</if>
            <!--<if test="emil!=null and emil!='' ">and emil=#{emil}</if>-->
            <if test="name!=null and name!=''">and name=#{name}</if>
            <if test="type!=null and type>0 ">and type=#{type}</if>
        </where>
        order BY id
    </select>
    <update id="updateUserById" parameterType="com.xawl.Pojo.User">
    update db_user set pass=#{pass} where id=#{id}
</update>
    <insert id="insertUser" parameterType="com.xawl.Pojo.User">
            insert into db_user (techno,pass,name,sdept,level,startedDate,type)
    values(#{techno},#{pass},#{name},#{sdept},#{level},#{startedDate},#{type})
    </insert>
    <delete id="deleteUserById">
        DELETE from db_user WHERE id = #{id}
    </delete>

</mapper>